---
name: Create repository discussion

on:
    push:
        branches:
            - "test"

jobs:
    create-discussion:
        permissions:
            discussions: write
        runs-on: ubuntu-22.04
        steps:
            - name: Get repository information
              id: get-repository-info
              uses: octokit/graphql-action@v2.x
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  variables: |
                      owner: ${{ github.repository_owner }}
                      name: ${{ github.event.repository.name }}
                  query: |
                      query GetRepositoryInformation ($name: String!, $owner: String!) {
                        repository(name: $name, owner: $owner) {
                          id
                          discussionCategory(slug: "ideas") {
                            id
                          }
                        }
                      }

            - name: Get current date
              id: current-date
              run: echo "date=$(date -d "next Tue" +'%d %B %Y')" >> $GITHUB_OUTPUT

            - name: Create repository discussion
              id: create-repository-discussion
              uses: octokit/graphql-action@v2.x
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  variables: |
                      body: "<b>This is my discussion body</b><br/><h3>Hello, world!</h3>"
                      title: "Discussion created on ${{ steps.current-date.outputs.date }}"
                      repositoryId: ${{ fromJSON(steps.get-repository-info.outputs.data).repository.id }}
                      categoryId: ${{ fromJSON(steps.get-repository-info.outputs.data).repository.discussionCategory.id }}
                  query: |
                      mutation CreateDiscussionMutation ($title: String!, $body: String!, $repositoryId: ID!, $categoryId: ID!) {
                        createDiscussion(input: { title: $title, body: $body, repositoryId: $repositoryId, categoryId: $categoryId }) {
                          discussion {
                            title
                          }
                        }
                      }

            - name: Discussion successfully created
              run: echo "Created discussion '${{ fromJSON(steps.create-repository-discussion.outputs.data).createDiscussion.discussion.title }}'"
